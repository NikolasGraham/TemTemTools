{"version":3,"sources":["Components/CalculatorDisplay.js","Hooks/useTypeCalculator.js","Views/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["CalculatorDisplay","TypeCalc","useState","effectiveTypes","setEffectiveTypes","typeOne","setTypeOne","typeTwo","setTypeTwo","useEffect","effectiveTypingSetter","console","log","undefined","neutral","fire","water","nature","electric","earth","mental","wind","digital","melee","crystal","toxic","attackingBonus","defendingBonus","name","useTypeCalculator","typeDisplay","setTypeDisplay","style","color","Button","onClick","backgroundColor","alert","HomePage","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dd11720.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Input} from \"reactstrap\";\r\nimport {useTypeCalculator} from \"../Hooks/useTypeCalculator\";\r\n\r\nconst CalculatorDisplay = () => {\r\n\r\n    const TypeCalc = useTypeCalculator();\r\n\r\n    const [typeDisplay, setTypeDisplay] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        console.log(\"StartingUpCalculatorDisplay\");\r\n    }, []);\r\n\r\n\r\n    const setText = () => {\r\n        console.log(TypeCalc.effectiveTypes);\r\n        if(TypeCalc.effectiveTypes !== undefined){\r\n            setTypeDisplay(<div>\r\n                <a style={{backgroundColor: \"grey\"}}>Neutral: {TypeCalc.effectiveTypes.neutral}</a>\r\n                -\r\n                <a style={{backgroundColor: \"#ff726f\"}}>Fire: {TypeCalc.effectiveTypes.fire}</a>\r\n                -\r\n                <a style={{backgroundColor: \"blue\"}}>Water: {TypeCalc.effectiveTypes.water}</a>\r\n                -\r\n                <a style={{backgroundColor: \"green\"}}>Nature: {TypeCalc.effectiveTypes.nature}</a>\r\n                -\r\n                <a style={{backgroundColor: \"#e6e600\"}}>Electric: {TypeCalc.effectiveTypes.electric}</a>\r\n                -\r\n                <a style={{backgroundColor: \"brown\"}}>Earth: {TypeCalc.effectiveTypes.earth}</a>\r\n                -\r\n                <a style={{backgroundColor: \"purple\"}}>Mental: {TypeCalc.effectiveTypes.mental}</a>\r\n                -\r\n                <a style={{backgroundColor: \"lightGreen\"}}>Wind: {TypeCalc.effectiveTypes.wind}</a>\r\n                -\r\n                <a style={{backgroundColor: \"darkGrey\"}}>Digital: {TypeCalc.effectiveTypes.digital}</a>\r\n                -\r\n                <a style={{backgroundColor: \"orange\"}}>Melee: {TypeCalc.effectiveTypes.melee}</a>\r\n                -\r\n                <a style={{backgroundColor: \"red\"}}>Crystal: {TypeCalc.effectiveTypes.crystal}</a>\r\n                -\r\n                <a style={{backgroundColor: \"#330033\"}}>Toxic: {TypeCalc.effectiveTypes.toxic}</a>\r\n            </div>);\r\n        }\r\n\r\n        else {\r\n            alert(\"No type selected!\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{color: \"white\"}}>\r\n            <h2>TemTem Typing Calculator</h2>\r\n            <h5>TypeOne: {TypeCalc.typeOne ? TypeCalc.typeOne.name : \"?\"}   TypeTwo: {TypeCalc.typeTwo !== undefined ? TypeCalc.typeTwo.name : \"?\"}</h5>\r\n            <h4>{typeDisplay ? typeDisplay : \"...\"}</h4>\r\n            <Button onClick={() => {\r\n                setTypeDisplay(\"\")\r\n                TypeCalc.setTypeOne();\r\n                TypeCalc.setTypeTwo();\r\n            }}>Clear</Button>\r\n            <Button style={{backgroundColor: \"lightGrey\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.neutral)}>TypeOne: Neutral</Button>\r\n            <Button style={{backgroundColor: \"lightGrey\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.neutral)}>TypeTwo: Neutral</Button>\r\n            <Button color=\"danger\" onClick={() => setText()}>Calculate</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"#ff726f\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.fire)}>TypeOne: Fire</Button>\r\n            <Button style={{backgroundColor: \"#ff726f\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.fire)}>TypeTwo: Fire</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"blue\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.water)}>TypeOne: Water</Button>\r\n            <Button style={{backgroundColor: \"blue\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.water)}>TypeTwo: Water</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"green\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.nature)}>TypeOne: Nature</Button>\r\n            <Button style={{backgroundColor: \"green\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.nature)}>TypeTwo: Nature</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"#e6e600\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.electric)}>TypeOne: Electric</Button>\r\n            <Button style={{backgroundColor: \"#e6e600\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.electric)}>TypeTwo: Electric</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"brown\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.earth)}>TypeOne: Earth</Button>\r\n            <Button style={{backgroundColor: \"brown\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.earth)}>TypeTwo: Earth</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"purple\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.mental)}>TypeOne: Mental</Button>\r\n            <Button style={{backgroundColor: \"purple\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.mental)}>TypeTwo: Mental</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"lightGreen\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.wind)}>TypeOne: Wind</Button>\r\n            <Button style={{backgroundColor: \"lightGreen\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.wind)}>TypeTwo: Wind</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"darkGrey\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.digital)}>TypeOne: Digital</Button>\r\n            <Button style={{backgroundColor: \"darkGrey\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.digital)}>TypeTwo: Digital</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"orange\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.melee)}>TypeOne: Melee</Button>\r\n            <Button style={{backgroundColor: \"orange\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.melee)}>TypeTwo: Melee</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"red\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.crystal)}>TypeOne: Crystal</Button>\r\n            <Button style={{backgroundColor: \"red\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.crystal)}>TypeTwo: Crystal</Button>\r\n            <br />\r\n            <Button style={{backgroundColor: \"#330033\"}} color=\"primary\" onClick={() => TypeCalc.setTypeOne(TypeCalc.defendingBonus.toxic)}>TypeOne: Toxic</Button>\r\n            <Button style={{backgroundColor: \"#330033\"}} color=\"secondary\" onClick={() => TypeCalc.setTypeTwo(TypeCalc.defendingBonus.toxic)}>TypeTwo: Toxic</Button>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default CalculatorDisplay;","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useTypeCalculator = () => {\r\n\r\n    const [effectiveTypes, setEffectiveTypes] = useState();\r\n    const [typeOne, setTypeOne] = useState();\r\n    const [typeTwo, setTypeTwo] = useState();\r\n\r\n    const attackingBonus = {\r\n        neutral: {\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 1,\r\n            earth: 1,\r\n            mental: 0.5,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 1\r\n        },\r\n        fire: {\r\n            neutral: 1,\r\n            fire: 0.5,\r\n            water: 0.5,\r\n            nature: 2,\r\n            electric: 1,\r\n            earth: 0.5,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 2,\r\n            toxic: 1\r\n        },\r\n        water: {\r\n\r\n        },\r\n        nature: [\r\n\r\n        ],\r\n        electric: [\r\n\r\n        ],\r\n        earth: [\r\n\r\n        ],\r\n        mental: [\r\n\r\n        ],\r\n        wind: [\r\n\r\n        ],\r\n        digital: [\r\n\r\n        ],\r\n        melee: [\r\n\r\n        ],\r\n        crystal: [\r\n\r\n        ],\r\n        toxic: [\r\n\r\n        ]\r\n    };\r\n    const defendingBonus = {\r\n        neutral: {\r\n            name: \"neutral\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 1,\r\n            earth: 1,\r\n            mental: 2,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 1\r\n        },\r\n        fire: {\r\n            name: \"fire\",\r\n            neutral: 1,\r\n            fire: 0.5,\r\n            water: 2,\r\n            nature: 0.5,\r\n            electric: 1,\r\n            earth: 2,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 1\r\n        },\r\n        water: {\r\n            name: \"water\",\r\n            neutral: 1,\r\n            fire: 0.5,\r\n            water: 0.5,\r\n            nature: 2,\r\n            electric: 2,\r\n            earth: 0.5,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 2\r\n        },\r\n        nature: {\r\n            name: \"nature\",\r\n            neutral: 1,\r\n            fire: 2,\r\n            water: 0.5,\r\n            nature: 0.5,\r\n            electric: 0.5,\r\n            earth: 0.5,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 2\r\n        },\r\n        electric: {\r\n            name: \"electric\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 0.5,\r\n            earth: 2,\r\n            mental: 1,\r\n            wind: 0.5,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 2,\r\n            toxic: 1\r\n        },\r\n        earth: {\r\n            name: \"earth\",\r\n            neutral: 1,\r\n            fire: 0.5,\r\n            water: 2,\r\n            nature: 2,\r\n            electric: 0.5,\r\n            earth: 1,\r\n            mental: 1,\r\n            wind: 2,\r\n            digital: 1,\r\n            melee: 2,\r\n            crystal: 0.5,\r\n            toxic: 0.5\r\n        },\r\n        mental: {\r\n            name: \"mental\",\r\n            neutral: 0.5,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 2,\r\n            earth: 1,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 2,\r\n            melee: 0.5,\r\n            crystal: 2,\r\n            toxic: 1\r\n        },\r\n        wind: {\r\n            name: \"wind\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 2,\r\n            earth: 0.5,\r\n            mental: 1,\r\n            wind: 0.5,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 1\r\n        },\r\n        digital: {\r\n            name: \"digital\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 2,\r\n            nature: 1,\r\n            electric: 2,\r\n            earth: 1,\r\n            mental: 1,\r\n            wind: 1,\r\n            digital: 2,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 0.5\r\n        },\r\n        melee: {\r\n            name: \"melee\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 1,\r\n            earth: 1,\r\n            mental: 2,\r\n            wind: 1,\r\n            digital: 2,\r\n            melee: 0.5,\r\n            crystal: 1,\r\n            toxic: 1\r\n        },\r\n        crystal: {\r\n            name: \"crystal\",\r\n            neutral: 1,\r\n            fire: 2,\r\n            water: 1,\r\n            nature: 1,\r\n            electric: 0.5,\r\n            earth: 2,\r\n            mental: 0.5,\r\n            wind: 1,\r\n            digital: 1,\r\n            melee: 2,\r\n            crystal: 1,\r\n            toxic: 0.5\r\n        },\r\n        toxic: {\r\n            name: \"toxic\",\r\n            neutral: 1,\r\n            fire: 1,\r\n            water: 0.5,\r\n            nature: 0.5,\r\n            electric: 1,\r\n            earth: 1,\r\n            mental: 1,\r\n            wind: 2,\r\n            digital: 1,\r\n            melee: 1,\r\n            crystal: 1,\r\n            toxic: 0.5\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        effectiveTypingSetter();\r\n    }, [typeOne, typeTwo]);\r\n\r\n    const effectiveTypingSetter = () => {\r\n        console.log(\"SettingEffectiveTypes\");\r\n        if (typeOne !== undefined && typeTwo !== undefined) {\r\n            setEffectiveTypes({\r\n                neutral: typeOne.neutral * typeTwo.neutral,\r\n                fire: typeOne.fire * typeTwo.fire,\r\n                water: typeOne.water * typeTwo.water,\r\n                nature: typeOne.nature * typeTwo.nature,\r\n                electric: typeOne.electric * typeTwo.electric,\r\n                earth: typeOne.earth * typeTwo.earth,\r\n                mental: typeOne.mental * typeTwo.mental,\r\n                wind: typeOne.wind * typeTwo.wind,\r\n                digital: typeOne.digital * typeTwo.digital,\r\n                melee: typeOne.melee * typeTwo.melee,\r\n                crystal: typeOne.crystal * typeTwo.crystal,\r\n                toxic: typeOne.toxic * typeTwo.toxic\r\n            })\r\n        } else if (typeOne !== undefined) {\r\n            setEffectiveTypes(typeOne);\r\n        }\r\n    };\r\n\r\n    return {\r\n        attackingBonus,\r\n        defendingBonus,\r\n        effectiveTypes,\r\n        typeOne,\r\n        setTypeOne,\r\n        typeTwo,\r\n        setTypeTwo\r\n    }\r\n\r\n};","import React from 'react';\r\nimport CalculatorDisplay from \"../Components/CalculatorDisplay\";\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div style={{backgroundColor: \"black\"}}>\r\n            <br />\r\n            <CalculatorDisplay/>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport HomePage from \"./Views/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}